//
//  SvgView.swift
//  Innmind
//
//  Created by Baptouuuu on 01/11/2021.
//

import SwiftUI
import WebKit

struct SvgView: View {
    var content: String

    var body: some View {
        VStack {
            SvgWebView(content: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"><!-- Generated by graphviz version 2.46.1 (20210213.1702) --><!-- Title: packages Pages: 1 --><svg width=\"190pt\" height=\"99pt\" viewBox=\"0.00 0.00 190.00 99.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 95)\"><title>packages</title><polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-95 186,-95 186,4 -4,4\"/><g id=\"clust1\" class=\"cluster\"><title>cluster_innmind</title><g id=\"a_clust1\"><a xlink:href=\"https://packagist.org/packages/innmind/\" xlink:title=\"innmind\"><polygon fill=\"none\" stroke=\"black\" points=\"8,-8 8,-83 174,-83 174,-8 8,-8\"/><text text-anchor=\"middle\" x=\"91\" y=\"-67.8\" font-family=\"Times,serif\" font-size=\"14.00\">innmind</text></a></g></g><!-- innmind__immutable --><g id=\"node1\" class=\"node\"><title>innmind__immutable</title><g id=\"a_node1\"><a xlink:href=\"https://packagist.org/packages/innmind/immutable#4.1.0\" xlink:title=\"immutable@4.1.0\"><ellipse fill=\"none\" stroke=\"#a7e599\" cx=\"91\" cy=\"-34\" rx=\"75.29\" ry=\"18\"/><text text-anchor=\"middle\" x=\"91\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">immutable@4.1.0</text></a></g></g></g></svg>")
        }
    }
}

struct SvgWebView: NSViewRepresentable {
    var content: String

    func makeNSView(context: NSViewRepresentableContext<SvgWebView>) -> WKWebView {
        return WKWebView()
    }

    public func updateNSView(_ nsView: WKWebView, context: NSViewRepresentableContext<SvgWebView>) {
        nsView.allowsMagnification = true
        nsView.allowsBackForwardNavigationGestures = true
        nsView.loadHTMLString(content, baseURL: URL(string: "http://localhost/"))
    }
}

struct SvgView_Previews: PreviewProvider {
    static var previews: some View {
        SvgView(content: "</svg>")
    }
}
